{"version":3,"sources":["components/landingpage.js","components/about.js","components/signup.js","components/login.js","components/contact.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","Component","About","Signup","Form","FormGroup","Label","Input","type","placeholder","Button","App","react_router_dom","to","react_router","path","component","Contact","Main","exact","Landingpage","Login","lib","title","scroll","main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4897345.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\n\nclass Home extends Component{\n    render(){\n        return(\n            <div><h1 className=\"text-center\">Welcome here</h1></div>\n        )\n    }\n\n}\n\nexport default Home;","import React, {Component} from 'react';\n\nclass About extends Component{\n    render(){\n        return(\n            <div><h1 className=\"text-center\">About</h1></div>\n        )\n    }\n\n}\n\nexport default About;","import React, {Component} from 'react';\nimport './login.css';\nimport { Button , Form , FormGroup , Label , Input } from 'reactstrap';\n\n\nclass Signup extends Component{\n    render(){\n        return(\n            <Form className=\"login_form\">\n            <h2>Signup Page</h2>\n            <FormGroup>\n            <Label>Email</Label>\n            <Input type=\"email\" placeholder=\"email\"/>\n            </FormGroup>\n            <FormGroup>\n            <Label>Password</Label>\n            <Input type=\"password\" placeholder=\"password\"/>\n            </FormGroup>\n            <Button className=\"btn-lg btn-danger btn-block\">Signup</Button>\n            </Form>\n        );\n    }\n\n}\n\nexport default Signup ;","import React, {Component} from 'react';\nimport './login.css';\nimport { Button , Form , FormGroup , Label , Input } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {  Route }from 'react-router-dom';\nimport {BrowserRouter as Router } from 'react-router-dom';\nimport Signup  from './signup';\n\nclass App extends Component{\n    render(){\n        return(\n        <Form className=\"login_form\">\n            <h2 className=\"p-2\">Login Page</h2>\n            <FormGroup>\n            <Label>Username</Label>\n            <Input type=\"name\" placeholder=\"username\"/>\n            </FormGroup>\n            <FormGroup>\n            <Label>Email</Label>\n            <Input type=\"email\" placeholder=\"email\"/>\n            </FormGroup>\n            <FormGroup>\n            <Label>Password</Label>\n            <Input type=\"password\" placeholder=\"password\"/>\n            </FormGroup>\n            <Button className=\"btn-lg btn-danger btn-block\">Login</Button>\n      \n          \n            <Router>\n              <div className=\"text-center mt-3\">\n              Already a user then click here <Link to=\"/signup\" >Signup</Link>\n              <Route  path='/signup' component={Signup} />\n              </div>\n            </Router>\n           \n         \n         </Form>\n        )\n    }\n\n}\n\nexport default App;","import React, {Component} from 'react';\n\nclass Contact extends Component{\n    render(){\n        return(\n            <div><h1 className=\"text-center\">Contact</h1></div>\n        )\n    }\n\n}\n\nexport default Contact;","import React from 'react';\nimport {Switch , Route }from 'react-router-dom';\nimport Landingpage from './landingpage';\nimport About  from './about';\nimport Login from './login';\nimport Contact from './contact';\nimport Signup  from './signup';\n\nconst Main=()=>(\n<Switch>\n   <Route  exact path='/' component={Landingpage} />\n   <Route   path='/landingpage' component={Landingpage} />\n   <Route  path='/about' component={About} />\n   <Route  path='/login' component={Login} />\n   <Route  path='/contact' component={Contact} />\n   <Route  path='/signup' component={Signup} />\n</Switch>\n)\n\nexport default Main;","import React from 'react';\n\nimport './App.css';\nimport {Layout, Navigation ,Header , Drawer , Content} from 'react-mdl';\nimport Main from './components/main';\nimport {Link} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"demo-big-content\">\n    <Layout>\n        <Header title=\"Title\" scroll>\n            <Navigation>\n                <Link to=\"/landingpage\">Home </Link>\n                <Link to=\"/about\">About </Link>\n                <Link to=\"/login\">login</Link>\n                <Link to=\"/contact\">Contact</Link>\n              \n            </Navigation>\n        </Header>\n        <Drawer title=\"Title\">\n            <Navigation>\n            <Link to=\"/landingpage\">Home </Link>\n            <Link to=\"/about\">About </Link>\n            <Link to=\"/login\">login</Link>\n            <Link to=\"/contact\">Contact</Link>\n                \n            </Navigation>\n        </Drawer>\n        <Content>\n            <div className=\"page-content\" />\n            <Main/>\n        </Content>\n    </Layout>\n</div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport{BrowserRouter} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <BrowserRouter> \n       <App />\n    </BrowserRouter>\n   , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}